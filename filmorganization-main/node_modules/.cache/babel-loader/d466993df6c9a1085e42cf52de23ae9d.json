{"ast":null,"code":"import { createAsyncThunk, createSlice } from '@reduxjs/toolkit';\nconst initialState = {\n  value: 0\n}; // const getdata=createAsyncThunk(\n//   'movies/getdata',\n// async () => {\n//   const response = await userAPI.fetchById(userId)\n//   return response.data\n// }\n// )\n\nexport const moviesSlice = createSlice({\n  name: 'movies',\n  initialState: {\n    movies: [],\n    favorites: [],\n    listInput: '',\n    isDisabled: false\n  },\n  reducers: {\n    setMovies: (state, {\n      payload\n    }) => {\n      state.movies = payload;\n    },\n    setFavorite: (state, {\n      payload\n    }) => {\n      if (state.favorites.map(item => item.imdbID).includes(payload.imdbID) == false) {\n        state.favorites = [...state.favorites, payload];\n      }\n    },\n    deleteFavorites: (state, {\n      payload\n    }) => {\n      state.favorites = state.favorites.filter(item => item.imdbID !== payload);\n    },\n    changeInput: (state, {\n      payload\n    }) => {\n      state.listInput = payload;\n    },\n    setDisabled: (state, {\n      payload\n    }) => {\n      state.isDisabled = !payload;\n    }\n  }\n});\nexport const {\n  setMovies,\n  setFavorite,\n  deleteFavorites,\n  changeInput,\n  setDisabled\n} = moviesSlice.actions;\nexport default moviesSlice.reducer;","map":{"version":3,"sources":["C:/Users/user/Downloads/filmorganization-main/filmorganization-main/src/store/reducer/moviesReducer.js"],"names":["createAsyncThunk","createSlice","initialState","value","moviesSlice","name","movies","favorites","listInput","isDisabled","reducers","setMovies","state","payload","setFavorite","map","item","imdbID","includes","deleteFavorites","filter","changeInput","setDisabled","actions","reducer"],"mappings":"AAAA,SAASA,gBAAT,EAA2BC,WAA3B,QAA8C,kBAA9C;AAEA,MAAMC,YAAY,GAAG;AACnBC,EAAAA,KAAK,EAAE;AADY,CAArB,C,CAGA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA,OAAO,MAAMC,WAAW,GAAGH,WAAW,CAAC;AACrCI,EAAAA,IAAI,EAAE,QAD+B;AAErCH,EAAAA,YAAY,EAAC;AACXI,IAAAA,MAAM,EAAC,EADI;AAEXC,IAAAA,SAAS,EAAC,EAFC;AAGXC,IAAAA,SAAS,EAAE,EAHA;AAIXC,IAAAA,UAAU,EAAE;AAJD,GAFwB;AASrCC,EAAAA,QAAQ,EAAE;AACTC,IAAAA,SAAS,EAAE,CAACC,KAAD,EAAQ;AAACC,MAAAA;AAAD,KAAR,KAAoB;AAC7BD,MAAAA,KAAK,CAACN,MAAN,GAAaO,OAAb;AACD,KAHQ;AAITC,IAAAA,WAAW,EAAE,CAACF,KAAD,EAAQ;AAACC,MAAAA;AAAD,KAAR,KAAoB;AAC/B,UAAGD,KAAK,CAACL,SAAN,CAAgBQ,GAAhB,CAAoBC,IAAI,IAAEA,IAAI,CAACC,MAA/B,EAAuCC,QAAvC,CAAgDL,OAAO,CAACI,MAAxD,KAAiE,KAApE,EAA0E;AACvEL,QAAAA,KAAK,CAACL,SAAN,GAAgB,CAAC,GAAGK,KAAK,CAACL,SAAV,EAAqBM,OAArB,CAAhB;AACF;AACF,KARQ;AASTM,IAAAA,eAAe,EAAE,CAACP,KAAD,EAAQ;AAACC,MAAAA;AAAD,KAAR,KAAoB;AACnCD,MAAAA,KAAK,CAACL,SAAN,GAAgBK,KAAK,CAACL,SAAN,CAAgBa,MAAhB,CAAuBJ,IAAI,IAAGA,IAAI,CAACC,MAAL,KAAgBJ,OAA9C,CAAhB;AACD,KAXQ;AAYTQ,IAAAA,WAAW,EAAE,CAACT,KAAD,EAAQ;AAACC,MAAAA;AAAD,KAAR,KAAoB;AAC/BD,MAAAA,KAAK,CAACJ,SAAN,GAAgBK,OAAhB;AACD,KAdQ;AAeTS,IAAAA,WAAW,EAAE,CAACV,KAAD,EAAQ;AAACC,MAAAA;AAAD,KAAR,KAAoB;AAC/BD,MAAAA,KAAK,CAACH,UAAN,GAAmB,CAACI,OAApB;AACD;AAjBQ;AAT2B,CAAD,CAA/B;AA8BP,OAAO,MAAM;AAAEF,EAAAA,SAAF;AAAaG,EAAAA,WAAb;AAA0BK,EAAAA,eAA1B;AAA2CE,EAAAA,WAA3C;AAAwDC,EAAAA;AAAxD,IAAwElB,WAAW,CAACmB,OAA1F;AAEP,eAAenB,WAAW,CAACoB,OAA3B","sourcesContent":["import { createAsyncThunk, createSlice } from '@reduxjs/toolkit'\r\n\r\nconst initialState = {\r\n  value: 0,\r\n}\r\n// const getdata=createAsyncThunk(\r\n//   'movies/getdata',\r\n// async () => {\r\n//   const response = await userAPI.fetchById(userId)\r\n//   return response.data\r\n// }\r\n// )\r\nexport const moviesSlice = createSlice({\r\n  name: 'movies',\r\n  initialState:{\r\n    movies:[],\r\n    favorites:[],\r\n    listInput: '',\r\n    isDisabled: false\r\n  },\r\n  \r\n  reducers: {\r\n   setMovies: (state, {payload})=>{\r\n     state.movies=payload\r\n   },\r\n   setFavorite: (state, {payload})=>{\r\n     if(state.favorites.map(item=>item.imdbID).includes(payload.imdbID)==false){\r\n        state.favorites=[...state.favorites, payload]\r\n     }\r\n   },\r\n   deleteFavorites: (state, {payload})=>{\r\n     state.favorites=state.favorites.filter(item=> item.imdbID !== payload)\r\n   },\r\n   changeInput: (state, {payload})=>{\r\n     state.listInput=payload\r\n   },\r\n   setDisabled: (state, {payload})=>{\r\n     state.isDisabled = !payload\r\n   }\r\n  }\r\n})\r\n\r\nexport const { setMovies, setFavorite, deleteFavorites, changeInput, setDisabled } = moviesSlice.actions\r\n\r\nexport default moviesSlice.reducer\r\n"]},"metadata":{},"sourceType":"module"}